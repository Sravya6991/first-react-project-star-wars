[{"E:\\BWS projects\\react project-1\\star-wars\\src\\index.js":"1","E:\\BWS projects\\react project-1\\star-wars\\src\\reportWebVitals.js":"2","E:\\BWS projects\\react project-1\\star-wars\\src\\App.js":"3"},{"size":535,"mtime":1661365963955,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1661365964105,"results":"6","hashOfConfig":"5"},{"size":1798,"mtime":1661371775350,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mcmj38",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"E:\\BWS projects\\react project-1\\star-wars\\src\\index.js",[],[],"E:\\BWS projects\\react project-1\\star-wars\\src\\reportWebVitals.js",[],[],"E:\\BWS projects\\react project-1\\star-wars\\src\\App.js",["18"],[],"import './App.css';\nimport React from 'react';\n\nclass AffiliationsList extends React.Component {\n  render() {\n    return(\n      <li>\n        {this.props.affil}\n      </li>\n    )\n  }\n}\n\nclass StarWars extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      image: null,\n      name: null,\n      height: null,\n      homeworld: null,\n      affiliations: [],\n    }\n  }\n\n  getNewCharacter() {\n    const randNumber = Math.ceil(Math.random() * 88)\n    const url = `https://rawcdn.githack.com/akabab/starwars-api/0.2.1/api/id/${randNumber}.json`\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({\n          image: data.image,\n          name: data.name,\n          hieght: data.height,\n          homeworld: data.homeworld,\n          affiliations: data.affiliations,\n        })\n        \n      })\n  }\n\n  render() {\n\n    const affiliation = this.state.affiliations.map((affil, i) => {\n      return <AffiliationsList key={i} affil={affil} />\n    })\n\n    return(\n      <div>\n        <img src={this.state.image} alt={`${this.state.name}'s image`} width={\"400px\"} height={\"400px\"}/>\n        <h1>{this.state.name}</h1>\n        <p>Height: {this.state.height}</p>\n        <p>HomeWorld: {this.state.homeworld}</p>\n        <p className=\"affili\">Affiliations -</p>\n        <ul>\n          <li>\n            {affiliation}\n          </li>\n        </ul>\n        <button \n          type=\"button\" \n          className=\"btn\" \n          onClick={() => this.getNewCharacter()}\n        >\n          Randomize character\n        </button>\n      </div>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <StarWars />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","severity":1,"message":"20","line":53,"column":9,"nodeType":"21","endLine":53,"endColumn":106},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]